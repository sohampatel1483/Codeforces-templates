/*
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⢃⣀⡀⠀⠀⠀⠀⠀⠀⢾⠀⠀⡐⢀⡂⠀⠰⠀⡴⠀⣠⣀⡀⠰⡀⢀⣴⡿⢻⣷⣿⢿⣷⣶⣶⣶⣶⣶⣶⣿⢻⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢽⣽⣿⣿⣿⣷⣶⣦⣤⣄⣀⣿⡀⠊⣰⣾⣿⣦⣸⠀⢀⣾⡿⣿⣿⣶⣄⣸⣿⢆⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⡃⢉⣿⣿⡎⠙⠿⠻⣟⠿⣿⣇⣸⡿⣿⣯⣿⣿⣄⣿⠉⣿⣿⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⠙⠉⠛⣽⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣠⣾⣿⠟⠉⠙⠿⢿⣿⡆⠀⠀⠀⠀⠀⠀⠉⢻⣿⣸⣿⣿⣿⣿⣿⣷⣼⡿⣿⣿⣿⡆⠀⢻⣿⣽⣿⣿⣆⠀⠀⢽⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢀⣾⣿⣿⣿⣢⡀⣠⢞⣽⣎⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⡟⣿⣿⣿⡇⠁⠀⠹⣿⡽⣿⣿⣿⡄⠀⢹⣿⣿⣿⣿⣆⠀⠺⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢠⣿⣿⣿⣿⢟⠉⠻⣿⣿⣿⣿⣧⡄⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣿⣿⣧⠀⠀⠀⠈⠻⣿⣿⣽⣷⡄⠀⠹⣿⣿⣿⣿⣆⢸⣿⣿⣿⣿⣿⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢠⣿⣿⣿⣿⣿⣿⠀⠀⠀⣽⢿⠛⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⡆⠀⠀⠀⠀⠹⣿⣿⣿⣿⡄⠀⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢠⣿⣿⣿⣵⣿⣿⣿⣶⣤⣾⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⣿⣿⠀⢀⠀⠀⠀⠈⢻⣿⣿⣿⣆⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢠⣿⣿⡿⢡⣿⣿⣿⢻⣿⣿⣿⣿⣿⠛⠃⠀⠀⠀⠀⢀⣉⣛⡦⣤⡀⠀⢻⣿⣿⣿⣦⠟⠀⠀⢀⣠⡤⠞⢿⣿⣿⡆⠀⠀⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⠟⢁⣿⣿⣿⠏⣽⣿⣿⣿⡌⢻⡀⠘⢶⣭⣭⣭⣅⣀⣀⡀⠈⠙⠓⢮⢻⣿⣿⣿⣤⠖⠛⠉⠀⠉⠉⠉⢻⣿⣿⣄⣀⣀⠙⣿⣿⣯⠁⠘⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⠏⠀⣾⣿⣿⡟⣼⣿⣿⣿⣿⣿⣸⡇⠀⠀⠙⢦⣄⣀⣤⣼⣿⡿⠛⢿⠗⠀⢿⣿⣿⣿⠀⣾⡛⢉⣉⣩⣽⣿⡿⣿⣿⡛⠀⠀⠈⣿⣿⡇⢸⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠁⠀⣸⣿⣿⡿⢀⣿⣿⣿⣿⣿⣿⡇⢧⠀⠀⠀⠀⠀⠉⠉⠩⣥⣤⣬⠗⠃⠀⠀⠻⣿⣿⣧⠀⠈⠉⠉⠩⠟⠻⠛⠛⣿⣿⠀⠀⢰⢿⢻⣿⣾⣿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⣸⣿⣿⡟⠀⣿⣿⣿⣿⣿⣿⣿⣧⢸⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣆⠢⠀⠀⠀⠀⢠⡆⠀⠙⣿⣧⠀⣼⢞⡜⣻⣿⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀
⣰⣿⣿⡟⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣧⢳⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠙⣿⣿⡄⠀⢀⡀⠀⡞⠀⠀⠀⠙⣿⣆⣯⠞⣽⣿⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀
⣿⣿⠏⠀⢠⣿⣿⠋⣿⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣡⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡀⠀⠀⠀⠀
⡿⠃⠀⠀⣿⣿⠋⢰⣿⣿⣿⣿⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣶⣄⡀⠀
⠀⠀⠀⣼⣿⠋⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⢀⠀⠀⠈⢿⡇⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣮⡙⠿⣿⣷⣦
⠀⠀⢰⣿⠏⠀⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠻⣞⠉⠀⠀⠀⠈⢿⡄⠀⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡀⠙⠻
⠀⠀⣾⡟⠀⠀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⢀⣀⣀⣀⣀⣈⣁⠀⠀⠀⠀⠘⣇⠀⠀⢀⣴⣿⣿⣸⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣿⣿⣦⡀
⠀⢰⡟⠀⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣷⢿⣦⡀⠀⠀⠀⠁⠀⠀⠉⠉⠉⠉⠉⠉⠀⠀⢸⡄⣠⣿⣿⣿⠏⣿⣿⡙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠙⢿⣿⣿⣿⣿⣿
⢀⡿⠁⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⢠⣿⡀⢻⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣨⣿⣿⢿⣿⠏⠀⡿⣿⣧⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠈⠻⣿⣿⣿
⣸⠃⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⢀⣿⡏⣇⠈⢻⣽⣧⡀⠀⠀⠀⠀⠀⠀⠀⣠⠔⣣⡾⣯⡼⠋⣾⠏⠀⢠⢇⣿⣿⠀⠘⢿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠈⠻⣿
⠏⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⡟⠁⠀⣼⣿⠁⡏⠀⠘⣿⣿⠝⣦⡀⠀⠀⠀⠒⣋⣤⣿⣿⡿⠋⠀⢸⡏⠀⠀⡾⣼⣿⣿⡄⠀⠈⢻⣿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀
⢀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠛⠁⡜⠁⠀⢀⣿⢿⡇⣷⠀⠀⠘⣾⢧⣼⣿⣿⡖⣾⣻⣽⣿⠿⠋⠀⢀⣤⡟⠀⠀⣼⣷⣿⣿⣿⡇⠀⠀⠈⢯⠙⢿⣿⣿⣿⣿⣿⣧⠀⠀⠀⠀
⣾⣿⣿⣿⣿⠿⠟⠛⠋⠁⠀⠀⠀⡸⠃⠀⠀⣼⡟⢸⣇⢹⠀⠀⠀⠘⢯⣻⣿⣧⣿⠟⠋⠙⠉⠀⣀⡴⠋⡽⠁⠀⣰⣧⣿⣿⣿⣿⡇⠀⠀⠀⠘⡇⠀⠉⠙⠛⠿⣿⣿⣷⡀⠀⠀
⠛⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠃⠀⠀⡇⣿⣆⠀⣿⠸⡄⠀⠀⠀⠀⠙⢾⠋⠀⠀⠀⢀⡤⠞⠋⠀⡸⠃⠀⣰⢇⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⢸⡄⠀⠀⠀⠀⢀⠼⠋⠓⠲⠤
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡇⠀⠀⠀⣧⣿⣿⣿⣿⡄⣷⠀⠀⠀⠀⠀⠈⠳⣄⣤⠖⠋⠀⠀⠀⠈⠁⣸⣳⠟⣾⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠈⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠁⠀⠀⠀⣹⣿⣿⣿⣿⣧⢸⡄⠀⠀⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⢠⣿⠃⣸⣿⣿⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡇⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⡀⢻⢦⣄⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡿⠁⣸⣿⣿⣿⣿⣿⣿⣿⠀⠁⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠁⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣧⠸⡄⠈⠙⢿⡙⣆⠀⠀⠀⠀⣀⠴⠞⡟⠁⣰⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⣿⣿⣿⡀⢱⡀⠀⠨⣻⣯⣄⠀⣠⠞⠁⢀⡜⠁⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣧⠈⢣⡀⠀⠀⠁⠺⠚⠁⠀⢀⡞⠁⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣇⡈⣧⣀⣀⣀⣀⠀⠀⣠⠞⢀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡗⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
*/
#include <bits/stdc++.h>

#ifdef ONLINE_JUDGE
#define debug(x)
#else
#include "soham.h"
#endif

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double lld;

#define INF 9e18
#define MOD 1000000007
#define nline "\n"
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define ff first
#define ss second
#define PI 3.141592653589793238462
#define set_bits __builtin_popcountll
#define sz(x) ((int)(x).size())
#define all(x) (x).begin(), (x).end()
#define fastio()                      \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)

struct custom_hash
{
    static uint64_t splitmix64(uint64_t x)
    {
        x += 0x9e3779b97f4a7c15;
        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;
        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;
        return x ^ (x >> 31);
    }

    size_t operator()(uint64_t x) const
    {
        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();
        return splitmix64(x + FIXED_RANDOM);
    }
};
long long binpow(long long a, long long b)
{
    long long res = 1;
    while (b > 0)
    {
        if (b & 1)
            res = res * a;
        a = a * a;
        b >>= 1;
    }
    return res;
}

void pain()
{
}
// USE CUSTOM_HASH WITH UNORDERED SET AND MAPS
int main()
{
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    freopen("error.txt", "w", stderr);
#endif
    fastio();
    ll test_case;
    cin >> test_case;
    for (int t = 1; t <= test_case; t++)
    {
        // cout << "Case #" << t << ": ";
        pain();
    }
    return 0;
}
